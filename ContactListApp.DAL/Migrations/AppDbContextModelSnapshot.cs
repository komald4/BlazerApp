// <auto-generated />
using System;
using ContactListApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactListApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("ContactListApp.Shared.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dc38c3e-2d62-4a22-9894-8d5f59e8639c"),
                            City = "Bilbao",
                            ContactId = new Guid("14b72dd1-4d36-48f7-b56f-c23fcf67cce2"),
                            State = "Islas Baleares",
                            Street = "Calle de Tetuán",
                            ZipCode = "34518"
                        },
                        new
                        {
                            Id = new Guid("31d0cee4-b746-4dd2-8e4d-e04da8ad9f89"),
                            City = "Henry",
                            ContactId = new Guid("62349bd2-0f28-4898-af96-cb4bc20b9d4b"),
                            State = "James",
                            Street = "Calle de Tetuán",
                            ZipCode = "34518"
                        },
                        new
                        {
                            Id = new Guid("d2c0499f-5734-42cc-8d6c-1872c0654bf9"),
                            City = "Bilbao",
                            ContactId = new Guid("22e1af59-2da0-4a0c-a82e-5e4d3e0cb0db"),
                            State = "Islas Baleares",
                            Street = "Calle de Tetuán",
                            ZipCode = "34518"
                        },
                        new
                        {
                            Id = new Guid("a17037b5-01f4-4f0c-9294-413488277e92"),
                            City = "Bilbao",
                            ContactId = new Guid("08a33b78-e7eb-4f6f-a09d-b1ba70626cb8"),
                            State = "Islas Baleares",
                            Street = "Calle de Tetuán",
                            ZipCode = "34518"
                        },
                        new
                        {
                            Id = new Guid("7d82402f-7562-48d7-9a61-783b14d09f3b"),
                            City = "Bilbao",
                            ContactId = new Guid("08a33b78-e7eb-4f6f-a09d-b1ba70626cb8"),
                            State = "Islas Baleares",
                            Street = "Calle de Tetuán",
                            ZipCode = "34518"
                        });
                });

            modelBuilder.Entity("ContactListApp.Shared.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14b72dd1-4d36-48f7-b56f-c23fcf67cce2"),
                            FirstName = "Mónica",
                            LastName = "Gallego"
                        },
                        new
                        {
                            Id = new Guid("62349bd2-0f28-4898-af96-cb4bc20b9d4b"),
                            FirstName = "",
                            LastName = ""
                        },
                        new
                        {
                            Id = new Guid("22e1af59-2da0-4a0c-a82e-5e4d3e0cb0db"),
                            FirstName = "",
                            LastName = ""
                        },
                        new
                        {
                            Id = new Guid("08a33b78-e7eb-4f6f-a09d-b1ba70626cb8"),
                            FirstName = "",
                            LastName = ""
                        });
                });

            modelBuilder.Entity("ContactListApp.Shared.Address", b =>
                {
                    b.HasOne("ContactListApp.Shared.Contact", "Contact")
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ContactListApp.Shared.Contact", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
